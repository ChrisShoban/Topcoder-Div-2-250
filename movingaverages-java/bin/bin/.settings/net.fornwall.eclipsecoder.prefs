eclipse.preferences.version=1
problemStatement=MovingAverages.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.7.0_45" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement">\n  <void property\="className">\n   <string>MovingAverages</string>\n  </void>\n  <void property\="contestName">\n   <string>SRM 209 DIV 2 - 250 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;MovingAverages&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;Moving averages are well known in stock charts analysis.\nThey are used to emphasize the direction of a trend and to smooth out fluctuations.\nAthletes may use moving averages to analyze their training results.\n&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nGiven a String[] &lt;b&gt;times&lt;/b&gt; containing the times from successive training sessions\n(e.g. the time to cycle a certain leg)\nand an int &lt;b&gt;n&lt;/b&gt;, return a int[] containing the &lt;b&gt;n&lt;/b&gt;-moving averages in seconds for\nthese times, with each average rounded down.\n&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nEach element of &lt;b&gt;times&lt;/b&gt; is in the format &lt;tt&gt;&amp;quot;hh\:mm\:ss&amp;quot;&lt;/tt&gt; (quotes for clarity), where &lt;tt&gt;hh&lt;/tt&gt;,\n&lt;tt&gt;mm&lt;/tt&gt; and &lt;tt&gt;ss&lt;/tt&gt; are two digit numbers (with a leading zero if necessary) indicating the\nnumber of hours, minutes and seconds, respectively.\n&lt;br&gt;&lt;/br&gt;\nA n-moving average is the average (i.e. the arithmetic mean) of n consecutive times.\nSo for t times given, t-n+1 n-moving averages are to be calculated.\nThe first average is composed from the times 1 to n, the second average from the times 2 to n+1 and so on,\nthe last average is composed from the times t-n+1 to t.\n&lt;br&gt;&lt;/br&gt;\n\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;MovingAverages&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;calculate&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;String[], int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int[] calculate(String[] times, int n)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;times&lt;/b&gt; contains between 1 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;times&lt;/b&gt; is in the format &lt;tt&gt;&amp;quot;hh\:mm\:ss&amp;quot;&lt;/tt&gt; (quotes for clarity), where&lt;br&gt;&lt;/br&gt;&lt;tt&gt;hh&lt;/tt&gt; is a two digit number (with a leading zero if necessary) between 0 and 23, inclusive,&lt;br&gt;&lt;/br&gt;&lt;tt&gt;mm&lt;/tt&gt; is a two digit number (with a leading zero if necessary) between 0 and 59, inclusive,&lt;br&gt;&lt;/br&gt;&lt;tt&gt;ss&lt;/tt&gt; is a two digit number (with a leading zero if necessary) between 0 and 59, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;n&lt;/b&gt; is between 1 and the number of elements in &lt;b&gt;times&lt;/b&gt;, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;01\:19\:10&amp;quot;, &amp;quot;01\:17\:40&amp;quot;, &amp;quot;01\:19\:44&amp;quot;, &amp;quot;01\:17\:23&amp;quot;, &amp;quot;01\:17\:07&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: { 4731,  4695,  4684 }&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;4731 (01\:18\:51) is the average of of the first three times, namely 01\:19\:10, 01\:17\:40, and 01\:19\:44.&lt;br&gt;&lt;/br&gt;\n4695 (01\:18\:15) is the average of the middle three times (01\:17\:40, 01\:19\:44, 01\:17\:23).&lt;br&gt;&lt;/br&gt;\nFinally, 4684 (01\:18\:04) is the average of the last three times (01\:19\:44, 01\:17\:23, 01\:17\:07).\n&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;01\:19\:10&amp;quot;, &amp;quot;01\:17\:40&amp;quot;, &amp;quot;01\:19\:44&amp;quot;, &amp;quot;01\:17\:23&amp;quot;, &amp;quot;01\:17\:07&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: { 4750,  4660,  4784,  4643,  4627 }&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The 1-moving averages are just the times given.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;01\:19\:10&amp;quot;, &amp;quot;01\:17\:40&amp;quot;, &amp;quot;01\:19\:44&amp;quot;, &amp;quot;01\:17\:23&amp;quot;, &amp;quot;01\:17\:07&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;5&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: { 4692 }&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The 5-moving averages of five times is just one value, the average of all the five values.\n&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>calculate</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>times</string>\n   </void>\n   <void method\="add">\n    <string>n</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.String;</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>[Ljava.lang.Integer;</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="5">\n          <void index\="0">\n           <string>01\:19\:10</string>\n          </void>\n          <void index\="1">\n           <string>01\:17\:40</string>\n          </void>\n          <void index\="2">\n           <string>01\:19\:44</string>\n          </void>\n          <void index\="3">\n           <string>01\:17\:23</string>\n          </void>\n          <void index\="4">\n           <string>01\:17\:07</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <int>3</int>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Integer" length\="3">\n        <void index\="0">\n         <int>4731</int>\n        </void>\n        <void index\="1">\n         <int>4695</int>\n        </void>\n        <void index\="2">\n         <int>4684</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="5">\n          <void index\="0">\n           <string>01\:19\:10</string>\n          </void>\n          <void index\="1">\n           <string>01\:17\:40</string>\n          </void>\n          <void index\="2">\n           <string>01\:19\:44</string>\n          </void>\n          <void index\="3">\n           <string>01\:17\:23</string>\n          </void>\n          <void index\="4">\n           <string>01\:17\:07</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <int>1</int>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Integer" length\="5">\n        <void index\="0">\n         <int>4750</int>\n        </void>\n        <void index\="1">\n         <int>4660</int>\n        </void>\n        <void index\="2">\n         <int>4784</int>\n        </void>\n        <void index\="3">\n         <int>4643</int>\n        </void>\n        <void index\="4">\n         <int>4627</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="5">\n          <void index\="0">\n           <string>01\:19\:10</string>\n          </void>\n          <void index\="1">\n           <string>01\:17\:40</string>\n          </void>\n          <void index\="2">\n           <string>01\:19\:44</string>\n          </void>\n          <void index\="3">\n           <string>01\:17\:23</string>\n          </void>\n          <void index\="4">\n           <string>01\:17\:07</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <int>5</int>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Integer" length\="1">\n        <void index\="0">\n         <int>4692</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
